<Application x:Class="EMRCorefResol.TestingGUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:EMRCorefResol.TestingGUI.Converters"
             xmlns:local="clr-namespace:EMRCorefResol.TestingGUI"
             xmlns:a="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:h="http://schemas.hungnd.com/wpf"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <h:SharedResourceDictionary AbsolutePath="/HungND.WPF;component/Themes/VS2012.xaml"/>
                <h:SharedResourceDictionary AbsolutePath="/HungND.WPF;component/Themes/Converters.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <c:NegIntToEnability x:Key="NegIntToEnability"/>
            <c:NotificationTypeToColor x:Key="NotificationTypeToColor"/>
            <c:NotificationTypeToPath x:Key="NotificationTypeToPath"/>
            <c:NotificationTypeToIconVisibility x:Key="NotificationTypeToIconVisibility"/>
            <c:EMRToTitleConverter x:Key="EMRToTitleConverter"/>

            <DataTemplate x:Key="ConceptTypesTemplate">
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Please choose a type from the list below:"
                               TextWrapping="Wrap"/>
                    <ListBox ItemsSource="{Binding Content, Mode=OneTime}"
                             SelectedIndex="0"
                             SelectedItem="{Binding SelectedType, Mode=OneWayToSource}"
                             Grid.Row="2"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="MessageContentTemplate">
                <Grid MinHeight="60">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Width="80" Visibility="{Binding NotificationType,Converter={StaticResource NotificationTypeToIconVisibility}}">
                        <h:IconElement VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       IconSource="{Binding NotificationType, Converter={StaticResource NotificationTypeToPath}}"
                                       Color="{Binding NotificationType, Converter={StaticResource NotificationTypeToColor}}" Size="Medium"/>
                    </Grid>
                    <TextBlock Grid.Column="2" Text="{Binding Content}" MinWidth="200"
                               TextWrapping="Wrap" VerticalAlignment="Center" MaxWidth="370"
                               Margin="5" x:Name="Message"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding NotificationType}" Value="None">
                        <Setter Property="MaxWidth" Value="450" TargetName="Message"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="YesNoButtonTemplate">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Yes" IsDefault="True" Margin="0,0,5,0" Command="{Binding ConfirmCommand}"/>
                    <Button Content="No" IsCancel="True" Command="{Binding CancelCommand}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="OkButtonTemplate">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="OK" IsDefault="True" Command="{Binding ReturnCommand}"/>
                </StackPanel>
            </DataTemplate>

            <SolidColorBrush Color="#FFE2E6D6" x:Key="ConceptFocusBackground"/>
            <SolidColorBrush Color="#FF000000" x:Key="ConceptFocusForeground"/>

            <xcad:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>

            <SolidColorBrush Color="#32000000" x:Key="AvalonDock_DocumentCloseButtonPressed"/>
            <SolidColorBrush Color="#32FFFFFF" x:Key="AvalonDock_DocumentCloseButtonMouseOver"/>

            <Style x:Key="AvalonDock_ThemeVS2012_ToolButtonStyle" TargetType="ToggleButton">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource AccentHighlightBrushKey}"/>
                        <Setter Property="Background"  Value="{StaticResource AccentHighlightBrushKey}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource AccentBrushKey}"/>
                        <Setter Property="Background"  Value="{StaticResource AccentBrushKey}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AvalonDock_ThemeVS2012_ButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource AvalonDock_DocumentCloseButtonMouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="{StaticResource AvalonDock_DocumentCloseButtonPressed}"/>
                                    <Setter Property="Foreground" Value="{StaticResource HighlightTextBrushKey}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--DocumentPaneControlStyle-->
            <Style x:Key="AvalonDock_ThemeVS2012_DocumentPaneControlStyle" TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                <Setter Property="Background" Value="{StaticResource AccentBrushKey}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentPaneControl}">
                            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--Following border is required to catch mouse events-->
                                <Border Background="Transparent" Grid.RowSpan="2"/>
                                <Grid Panel.ZIndex="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <xcad:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="0,0,0,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                                    <h:MenuButton x:Name="MenuDropDownButton"
                                                  Style="{StaticResource AvalonDock_ThemeVS2012_ToolButtonStyle}"
                                                  Focusable="False"
                                                  VerticalAlignment="Bottom"
                                                  BorderThickness="0"
                                                  Grid.Column="1">
                                        <h:MenuButton.Menu>
                                            <ContextMenu ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContextMenu.ItemContainerStyle>
                                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                        <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                    </Style>
                                                </ContextMenu.ItemContainerStyle>
                                            </ContextMenu>
                                        </h:MenuButton.Menu>
                                        <Polygon HorizontalAlignment="Center" 
                                                 VerticalAlignment="Bottom" 
                                                 Points="0,0 4,4 8,0" Margin="3,8,3,3"
                                                 Fill="{StaticResource AssetBrushKey}" 
                                                 x:Name="MenuDropDownArrow"/>
                                    </h:MenuButton>
                                </Grid>
                                <Border x:Name="ContentPanel" 
                                        VerticalAlignment="Stretch" 
                                        HorizontalAlignment="Stretch"   
                                        BorderBrush="{TemplateBinding Background}"
                                        BorderThickness="0,2,0,0"                                         
                                        Grid.Column="0"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        Grid.Row="1" 
                                        KeyboardNavigation.TabIndex="2" 
                                        KeyboardNavigation.TabNavigation="Cycle">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                      ContentSource="SelectedContent" 
                                                      Margin="0"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                                    <Setter Property="Fill" TargetName="MenuDropDownArrow" Value="{StaticResource AccentActiveBrushKey}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                                    <Setter Property="Fill" TargetName="MenuDropDownArrow" Value="{StaticResource HighlightTextBrushKey}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="False">
                                    <Setter Property="Background" Value="{StaticResource InactiveControlBrushKey}"/>
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{StaticResource ControlTextBrushKey}"/>
                            <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                            <Setter Property="Padding" Value="6,2,0,0"/>
                            <Setter Property="Margin" Value="1,0,0,0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Border x:Name="Bd" 
                                                    BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource Mode=Self}}"
                                                    BorderThickness="1,1,1,0" 
                                                    Background="{TemplateBinding Background}">
                                            </Border>
                                            <ContentPresenter 
                                                x:Name="Content" 
                                                Margin="{TemplateBinding Padding}"
                                                ContentSource="Header" 
                                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                RecognizesAccessKey="True" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding CanClose}" Value="False">
                                                <Setter Property="Padding" Value="6,2,6,2"/>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" Value="{StaticResource AccentBrushKey}" />
                                                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrushKey}"/>
                                            </Trigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive}" Value="False"/>
                                                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource InactiveControlBrushKey}"/>
                                                <Setter Property="Foreground" Value="{StaticResource AssetBrushKey}"/>
                                            </MultiDataTrigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="true"/>
                                                    <Condition Property="IsSelected" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource AccentActiveBrushKey}"/>
                                                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrushKey}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <xcad:LayoutDocumentTabItem Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <xcad:LayoutDocumentControl Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <GeometryGroup x:Key="CloseIcon">
                <LineGeometry StartPoint="1,0" EndPoint="10,9" />
                <LineGeometry StartPoint="0,1" EndPoint="9,10" />
                <LineGeometry StartPoint="1,1" EndPoint="9,9" />
                <LineGeometry StartPoint="9,0" EndPoint="0,9" />
                <LineGeometry StartPoint="10,1" EndPoint="1,10" />
                <LineGeometry StartPoint="9,1" EndPoint="1,9" />
            </GeometryGroup>

            <DataTemplate x:Key="CloseButtonContentTemplate">
                <Path Data="{Binding Path=Content,RelativeSource={RelativeSource AncestorType=Button}}"
                      Stroke="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=Button}}"
                      StrokeThickness="1"
                      Width="10" Height="10" Stretch="Uniform"/>
            </DataTemplate>

            <Style TargetType="{x:Type xcad:LayoutDocumentTabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentTabItem}">
                            <xcad:DropDownControlArea 
                                DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                                DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="2" Background="Transparent"/>
                                        <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"
                                                          ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager}, Mode=FindAncestor}}"/>
                                        <Button x:Name="DocumentCloseButton"
                                                Style="{StaticResource AvalonDock_ThemeVS2012_ButtonStyle}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="1" 
                                                Margin="6,0,0,0" 
                                                Visibility="Hidden" 
                                                Padding="4"
                                                Foreground="{StaticResource HighlightTextBrushKey}"
                                                Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                ToolTip="Close"
                                                Content="{StaticResource CloseIcon}"
                                                ContentTemplate="{StaticResource CloseButtonContentTemplate}">
                                        </Button>
                                    </Grid>
                                </Border>
                            </xcad:DropDownControlArea>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                                    <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=CanClose}" Value="false">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="DocumentCloseButton"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsActive}" Value="False"/>
                                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" TargetName="DocumentCloseButton"
                                            Value="{StaticResource AssetBrushKey}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>


    </Application.Resources>
</Application>
