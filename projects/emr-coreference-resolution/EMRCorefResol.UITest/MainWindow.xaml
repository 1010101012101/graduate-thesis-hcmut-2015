<Window x:Class="EMRCorefResol.UITest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EMRCorefResol.UITest"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        FontSize="13"
        Title="MainWindow" MinHeight="720" MinWidth="1280" Height="720" Width="1280" WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <!--<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <SolidColorBrush x:Key="Item.Static.Background" Color="#FFFCFCFC" />
        <SolidColorBrush x:Key="Item.Static.Border" Color="#FFFCFCFC" />
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
        <Style TargetType="GroupItem" x:Key="ConceptGroupStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupItem">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="0,0,0.25,0" BorderBrush="Gray" Padding="0,1,0,1">
                                <TextBlock Text="{Binding Path=Name}" HorizontalAlignment="Right"
                                           VerticalAlignment="Top" Foreground="Gray" Margin="0,0,2,0"/>
                            </Border>
                            <ItemsPresenter Grid.Column="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBoxItem" x:Key="ConceptItemStyle">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="||" x:Name="separator" IsHitTestVisible="False"/>
                            <Border x:Name="Bd" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="true" Grid.Column="1">
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}" Value="{x:Null}">
                                <Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                            </MultiTrigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                            <DataTrigger Binding="{Binding IsType}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ConceptItemTemplate">
            <Grid>
                <TextBlock x:Name="conceptText" Text="{Binding Concept}"/>
                <TextBlock x:Name="typeText" Text="{Binding Type}" Visibility="Collapsed"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsType}" Value="True">
                    <Setter TargetName="conceptText" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="typeText" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="ConceptsListBoxStyle" TargetType="ListBox">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ConceptItemStyle}"/>
            <Setter Property="ItemTemplate" Value="{StaticResource ConceptItemTemplate}"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="ChainsEditingMenu">
            <MenuItem x:Name="CreateMenuItem" Header="Create a new or add to an existing chain" Click="CreateMenuItem_Click"/>
        </ContextMenu>
        <!-- Collections -->
        <CollectionViewSource x:Key="Chains">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Index"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="Concepts">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Index"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="EMR Path: " VerticalAlignment="Center"/>
            <TextBox Grid.Column="1" Margin="5" x:Name="txtEMRPath" Height="21"/>
            <Button Content="..." Width="20" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,4"
                    x:Name="btnEMRPath" Click="btnEMRPath_Click"/>

            <TextBlock Text="Models: " VerticalAlignment="Center" Grid.Row="1"/>
            <TextBox Grid.Column="1" Margin="5" x:Name="txtModelsPath" Height="21" Grid.Row="1"/>
            <Button Content="..." Width="20" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,4"
                    x:Name="btnModelsPath" Click="btnModelsPath_Click" Grid.Row="1"/>

            <TextBlock Text="System chains: " VerticalAlignment="Center" Grid.Row="2"/>
            <TextBox Grid.Column="1" Margin="5" x:Name="txtSystemChainsPath" Height="21" Grid.Row="2"/>
            <Button Content="..." Width="20" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5"
                    x:Name="btnSystemChainsPath" Click="btnSystemChainsPath_Click" Grid.Row="2"/>
        </Grid>

        <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal">
            <Button Content="Previous" Width="60" Margin="0,0,5,0" x:Name="btnPrev" Click="btnPrev_Click" Height="25"/>
            <TextBox x:Name="txtCurrentEMRIndex" Text="0" VerticalAlignment="Center" MinWidth="30" TextAlignment="Right"
                     LostFocus="txtCurrentEMRIndex_LostFocus" PreviewKeyDown="txtCurrentEMRIndex_KeyDown"
                     GotKeyboardFocus="txtCurrentEMRIndex_GotKeyboardFocus"/>
            <TextBlock Text=" of " VerticalAlignment="Center"/>
            <TextBlock x:Name="txtTotalEMR" Text="0" Margin="0,0,5,0" VerticalAlignment="Center"/>
            <Button Content="Next" Width="60" Height="25" x:Name="btnNext" Click="btnNext_Click" Margin="0,0,5,0"/>
            <Rectangle Stroke="Black" StrokeThickness="1" Margin="0,0,5,0"/>
            <CheckBox Content="Use zero base" VerticalAlignment="Center"
                      IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:MainWindow}, Path=UseZeroBase}"/>
        </StackPanel>

        <Grid Grid.Row="2" Margin="0,5,0,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListBox BorderThickness="0" x:Name="lbTypes" HorizontalAlignment="Center"
                     VerticalAlignment="Center" SelectionMode="Multiple">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox VerticalContentAlignment="Center" Content="{Binding Text, Mode=OneTime}" 
                                  IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsChecked, Mode=TwoWay}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal" Margin="0, 5, 0, 0">
                <Button Content="Extract Features" x:Name="btnExtract" IsEnabled="False" Click="btnExtract_Click"/>
                <Button Content="Classifiy" x:Name="btnClassify" Click="btnClassify_Click" Margin="5,0,0,0"/>
                <Button Content="Resolve" x:Name="btnResolve" Click="btnResolve_Click" Margin="5,0,0,0"/>
                <Rectangle Stroke="Black" StrokeThickness="1" Margin="5,0,0,0"/>
                <Button Content="Edit Chains" x:Name="btnEditChains" Click="btnEditChains_Click" Margin="5,0,0,0"/>
                <Button Content="Save Chains" x:Name="btnSaveChains" IsEnabled="False" Click="btnSaveChains_Click" Margin="5,0,0,0"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="3" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TabControl>
                <TabItem Header="EMR" x:Name="tabEMR">
                    <avalonEdit:TextEditor x:Name="txtEMR" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
            </TabControl>
            <TabControl Grid.Column="2" x:Name="tab">
                <!--<TabItem Header="Concepts">
                    <avalonEdit:TextEditor x:Name="txtCons" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Ground Truth">
                    <avalonEdit:TextEditor x:Name="txtChains" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Features">
                    <avalonEdit:TextEditor x:Name="txtFeatures" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="System Chains">
                    <avalonEdit:TextEditor x:Name="txtSystemChains" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Scores">
                    <avalonEdit:TextEditor x:Name="txtScores" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Classification">
                    <avalonEdit:TextEditor x:Name="txtClas" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>-->
                <TabItem Header="Concepts">
                    <ListBox x:Name="lbConcepts" ItemsSource="{Binding Source={StaticResource Concepts}}"
                             Style="{StaticResource ConceptsListBoxStyle}" PreviewMouseRightButtonDown="lbConcepts_PreviewMouseRightButtonDown">
                        <ListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource ConceptGroupStyle}"/>
                        </ListBox.GroupStyle>
                    </ListBox>
                </TabItem>
                <TabItem Header="Ground Truth">
                    <ListBox x:Name="lbChains" ItemsSource="{Binding Source={StaticResource Chains}}"
                             Style="{StaticResource ConceptsListBoxStyle}">
                        <ListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource ConceptGroupStyle}"/>
                        </ListBox.GroupStyle>
                    </ListBox>
                </TabItem>
                <TabItem Header="Features">
                    <avalonEdit:TextEditor x:Name="txtFeatures" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="System Chains">
                    <avalonEdit:TextEditor x:Name="txtSystemChains" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Scores">
                    <avalonEdit:TextEditor x:Name="txtScores" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
                <TabItem Header="Classification">
                    <avalonEdit:TextEditor x:Name="txtClas" FontFamily="Consolas" FontSize="15" IsReadOnly="True"/>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>
